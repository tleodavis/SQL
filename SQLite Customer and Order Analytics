--In this SQL code, I am querying a database with multiple tables containing customer and order information in order to learn about the data.


--1. How many orders were placed in January?
SELECT count(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
    AND orderID <> 'Order ID'

--2. How many of those orders were for an iPhone?
SELECT count(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
    AND orderID <> 'Order ID'
    AND Product = 'iPhone'

--3. Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum
FROM BIT_DB.customers customers
JOIN BIT_DB.FebSales febsales
    ON customers.order_id = febsales.orderID
WHERE length(orderID) = 6
    AND orderID <> 'Order ID'

--4. Which product was the cheapest one sold in January, and what was the price?
SELECT distinct Product, min(price)
FROM BIT_DB.JanSales
GROUP BY Product, price
ORDER BY price ASC
LIMIT 1

SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE price IN
    (SELECT min(price)
    FROM BIT_DB.JanSales)

--5. What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
SELECT Product, sum(Quantity) * price as revenue
FROM BIT_DB.JanSales
GROUP BY Product


--6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, Quantity, sum(Quantity) * price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product

--7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT count(distinct customers.acctnum), avg(Quantity * price) as avg_amount_spent
FROM BIT_DB.FebSales febsales
LEFT JOIN BIT_DB.customers customers
    ON febsales.orderID = customers.order_id
WHERE Quantity > 2
    AND length(orderid) = 6
    AND orderid <> 'Order ID'
